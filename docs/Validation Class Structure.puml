@startuml

title PSC Filing API: Validation Class Structure
skinparam BackgroundColor White
skinparam PackageBackgroundColor White
skinparam ArrowPadding 2
skinparam linetype ortho
skinparam packageStyle frame
skinparam groupInheritance 2
'skinparam style strictuml
'for grouping package names
hide empty members
set separator none

legend right
|=Revision |=Date |
|    0.2    |     10/05/2023    |
end legend

skinparam class {
  BackgroundColor MintCream
}
    class Transaction <<external>>
    note as note1
     The validation attribute represents
     the error messages retrieved from the
     API Enumerations
    end note

        interface FilingValid #GhostWhite{
        +<T extends PscDtoCommunal> validate(FilingValidationContext <T>)
        +setNext(FilingValid)
    }

    interface FilingForPscTypeValid #GhostWhite{
        +getPscType(): PscTypeConstants
        +getFirst(): FilingValid
    }

    class BaseFilingValidator implements FilingValid {
        #validation: Map<String, String>
        -nextValidator: FilingValid
        +validate(FilingValidationContext<T>)
        +setNext(FilingValid)
    }
    note1 . BaseFilingValidator

    class FilingForPscTypeValidChain implements FilingForPscTypeValid {
        +getPscType(): PscTypeConstants
        +getFirst(): FilingValid
    }

    class FilingValidationContext <PscDtoCommunal> {
        +getDto(): PscDtoCommunal
        +getErrors(): List<FieldError>
        +getTransaction(): Transaction
        +getPscType(): PscTypeConstants
        +getPassthroughHeader(): String
    }

   class PscRegisterEntryDateValidator extends BaseFilingValidator

   note as note2
         Other validator classes exist e.g.
         *CeasedOnDateValidator
         *PscEtagValidator
         *PscExistsValidator
         *PscIsActiveValidator
         *TerminationRequiredFieldsValidator
   end note
   note2 - PscRegisterEntryDateValidator

   interface PscDetailsService #GhostWhite

   interface FilingValidationService #GhostWhite

    class FilingValidationServiceImpl implements FilingValidationService {
        filingValidByPscType: Map<PscTypeConstants, FilingForPscTypeValid>
    }

    enum PscTypeConstants #MistyRose {
        INDIVIDUAL("individual")
        CORPORATE_ENTITY("corporate-entity")
        LEGAL_PERSON("legal-person")
        }

    class ValidatorConfig {
        +filingForIndividualValid(filingValidators...): FilingForPscTypeValid
        +filingForCorporateEntityValid(): FilingForPscTypeValid
        +filingForLegalPersonValid(): FilingForPscTypeValid
        {static}-createValidationChain()
    }

    FilingValidationContext o..>Transaction: belongs to
    FilingValid <-- FilingValidationContext: "realises"
    ValidatorConfig "1  " o-- "3 "FilingForPscTypeValid
    FilingForPscTypeValidChain::getFirst "1 " o-- "1..* " FilingValid
    (FilingForPscTypeValid, ValidatorConfig)..FilingValidationServiceImpl
    FilingValidationServiceImpl .. PscTypeConstants
    PscDetailsService <-- PscRegisterEntryDateValidator:"consults "

@enduml